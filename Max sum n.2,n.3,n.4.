A number n can be broken into three parts n/2, n/3 and n/4 (consider only integer part). Each number obtained in this process can be divided further recursively. Find the maximum sum that can be obtained by summing up the divided parts together.
Note: The maximum sum may be obtained without dividing n also.

class Solution
{
    public int maxSum(int n) 
    {   
        if(n < 2)
        {
            return n;
        }
        int dp[] = new int[n+1];
        dp[0] = 0;
        dp[1] = 1;
        for(int i = 2;i<=n;i++)
        {
            dp[i] = Math.max(dp[i/2]+dp[i/3]+dp[i/4],i);
        }
        return dp[n];
    } 
}
